package com.staxnet.ant;

import java.io.File;

import javax.servlet.ServletException;

import com.cloudbees.sdk.utils.Helper;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Task;

import com.staxnet.appserver.StaxAppServer;
import com.staxnet.appserver.config.AppConfig;
import com.staxnet.appserver.config.AppConfigHelper;

public class RunTask extends Task {
    private File baseDir;
    private File workingDir;
    private File webappDir;
    private int port = 8080;
    private String contextPath = "";
    private File serverXmlFile;
    private File staxappxmlFile;
    private File appxmlFile;
    private String environment;
    
    @Override
    public void execute() throws BuildException {
        try {
            if(baseDir == null)
                baseDir = getProject().getBaseDir();

            checkRequiredAttribute("workingdir", workingDir);
            run(workingDir, contextPath, port, staxappxmlFile, appxmlFile, getEnvironments());
        }
        catch (IllegalArgumentException e) {
            throw new BuildException(e.getMessage());
        }
        catch (Exception e) {
            throw new BuildException(e.getMessage(), e);
        }
    }
    
    private void run(File configurationDir, String contextPath, int port, File staxappxml, File appxml, String[] environments) throws ServletException
    {
        this.log("application environment: " + StringHelper.join(environments, ","));
        StaxAppServer appServer = new StaxAppServer(baseDir.getAbsolutePath(), configurationDir.getAbsolutePath(),
                getClass().getClassLoader(), new String[0], serverXmlFile, port, staxappxml, appxml, environments, null);
        appServer.start();
    }
    
    private void checkRequiredAttribute(String attrName, Object value)
    {
        if(value == null)
            throw new BuildException("missing required attribute: " + attrName);
    }
    
    private String getAttributeValue(String attrName, String value, boolean required)
    {
        if(value == null)
        {
            value = System.getProperty("bees." + attrName);
            if (value == null)
                value = System.getProperty("stax." + attrName);
            if(required && value == null)
                throw new BuildException("missing required attribute: " + attrName);
        }
        return value;
    }
    
    public void setContextpath(String contextPath) {
        this.contextPath = contextPath;
    }
    
    public void setWorkingdir(File workingDir) {
        this.workingDir = workingDir;
    }

    /**
     * @deprecated ignored, but necessary for old ant scripts generated by the v1 SDK 
     */
    public void setWebappdir(File webappDir) {
        this.webappDir = webappDir;
    }
    
    public void setBaseDir(File webappDir) {
        this.webappDir = webappDir;
    }

    public void setPort(int port) {
        this.port = port;
    }

    public void setAppconfig(File appConfigFile) {
        this.staxappxmlFile = appConfigFile;
    }
    
    public void setAppxml(File appxmlFile)
    {
        this.appxmlFile = appxmlFile;
    }
    
    public void setServerconfig(File serverXmlFile) {
        this.serverXmlFile = serverXmlFile;
    }

    public void setEnvironment(String environments)
    {
        this.environment = environments;
    }
    
    private String[] getEnvironments()
    {
        String envString = this.environment != null ? this.environment : getProject().getProperty("run.environment"); 
        if(envString == null || envString.equals("") && staxappxmlFile != null && staxappxmlFile.exists())
        {
            //load the default environment, and append the run environment
            AppConfig appConfig = new AppConfig();
            AppConfigHelper.load(appConfig, staxappxmlFile.getAbsolutePath(), new String[0], new String[0]);
            
            envString = appConfig.getDefaultEnvironment();
        }
        
        String[] environment = Helper.getEnvironmentList(envString, "run");
        return environment;
    }
}
